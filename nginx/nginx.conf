user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid       /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  log_format json escape=json '{"time": "$time_iso8601",'
      '"host": "$remote_addr",'
      '"vhost": "$host",'
      '"user": "$remote_user",'
      '"status": "$status",'
      '"protocol": "$server_protocol",'
      '"method": "$request_method",'
      '"path": "$request_uri",'
      '"req": "$request",'
      '"size": "$body_bytes_sent",'
      '"reqtime": "$request_time",'
      '"apptime": "$upstream_response_time",'
      '"ua": "$http_user_agent",'
      '"forwardedfor": "$http_x_forwarded_for",'
      '"forwardedproto": "$http_x_forwarded_proto",'
      '"referrer": "$http_referer"}';
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  json;

  sendfile        on;
  keepalive_timeout  65;

  include /etc/nginx/conf.d/*.conf;

  upstream rails {
    server web:3000;
  }

  server {
    listen       80;
    server_name  localhost;

    root /app/public;

    location / {
      try_files $uri $uri/index.html @rails;
    }

    location @rails {
      # クライアントのリクエスト情報をpumaに伝える
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;

      proxy_pass http://rails;
    }
  }
}